{
  "openapi": "3.1.0",
  "x-powered-by": "strapi",
  "x-strapi-version": "5.29.0",
  "info": {
    "title": "api",
    "description": "API documentation for api v0.1.0",
    "version": "0.1.0"
  },
  "paths": {
    "/about": {
      "get": {
        "operationId": "about/get/about",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "blocks"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "blocks"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "title",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.251Z",
                          "type": "string"
                        },
                        "blocks": {
                          "description": "A dynamic zone field",
                          "type": "array",
                          "items": {}
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "about"
        ]
      },
      "put": {
        "operationId": "about/put/about",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "blocks"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "blocks"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.259Z",
                          "type": "string"
                        },
                        "blocks": {
                          "description": "A dynamic zone field",
                          "type": "array",
                          "items": {}
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "about"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.257Z",
                        "type": "string"
                      },
                      "blocks": {
                        "description": "A dynamic zone field",
                        "type": "array",
                        "items": {}
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "about/delete/about",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "blocks"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "blocks"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.262Z",
                          "type": "string"
                        },
                        "blocks": {
                          "description": "A dynamic zone field",
                          "type": "array",
                          "items": {}
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "about"
        ]
      }
    },
    "/articles": {
      "get": {
        "operationId": "article/get/articles",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "description",
                  "slug",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "title",
                  "description",
                  "slug",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "title",
                    "description",
                    "slug",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "title",
                      "description",
                      "slug",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "title",
                      "description",
                      "slug",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "title",
                        "description",
                        "slug",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "cover",
                    "author",
                    "category",
                    "blocks"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "cover",
                      "author",
                      "category",
                      "blocks"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "title": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "description": {
                            "description": "A text field",
                            "type": "string"
                          },
                          "slug": {
                            "description": "A UID field",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-10-30T04:03:24.270Z",
                            "type": "string"
                          },
                          "cover": {
                            "description": "A media field",
                            "$ref": "#/components/schemas/PluginUploadFileDocument"
                          },
                          "author": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/ApiAuthorAuthorDocument"
                          },
                          "category": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                          },
                          "blocks": {
                            "description": "A dynamic zone field",
                            "type": "array",
                            "items": {}
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "article"
        ]
      },
      "post": {
        "operationId": "article/post/articles",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "description",
                  "slug",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "cover",
                    "author",
                    "category",
                    "blocks"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "cover",
                      "author",
                      "category",
                      "blocks"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.303Z",
                          "type": "string"
                        },
                        "cover": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "author": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiAuthorAuthorDocument"
                        },
                        "category": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                        },
                        "blocks": {
                          "description": "A dynamic zone field",
                          "type": "array",
                          "items": {}
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "article"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "description": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "slug": {
                        "description": "A UID field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.301Z",
                        "type": "string"
                      },
                      "cover": {
                        "description": "A media field"
                      },
                      "author": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "category": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "blocks": {
                        "description": "A dynamic zone field",
                        "type": "array",
                        "items": {}
                      }
                    },
                    "required": [
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/articles/{id}": {
      "get": {
        "operationId": "article/get/articles_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "description",
                  "slug",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "cover",
                    "author",
                    "category",
                    "blocks"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "cover",
                      "author",
                      "category",
                      "blocks"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "title",
                  "description",
                  "slug",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "title",
                    "description",
                    "slug",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "title",
                      "description",
                      "slug",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "title",
                      "description",
                      "slug",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "title",
                        "description",
                        "slug",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.296Z",
                          "type": "string"
                        },
                        "cover": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "author": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiAuthorAuthorDocument"
                        },
                        "category": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                        },
                        "blocks": {
                          "description": "A dynamic zone field",
                          "type": "array",
                          "items": {}
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "article"
        ]
      },
      "put": {
        "operationId": "article/put/articles_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "description",
                  "slug",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "cover",
                    "author",
                    "category",
                    "blocks"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "cover",
                      "author",
                      "category",
                      "blocks"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.309Z",
                          "type": "string"
                        },
                        "cover": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "author": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiAuthorAuthorDocument"
                        },
                        "category": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                        },
                        "blocks": {
                          "description": "A dynamic zone field",
                          "type": "array",
                          "items": {}
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "article"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "description": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "slug": {
                        "description": "A UID field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.307Z",
                        "type": "string"
                      },
                      "cover": {
                        "description": "A media field"
                      },
                      "author": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "category": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "blocks": {
                        "description": "A dynamic zone field",
                        "type": "array",
                        "items": {}
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "article/delete/articles_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "description",
                  "slug",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "cover",
                    "author",
                    "category",
                    "blocks"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "cover",
                      "author",
                      "category",
                      "blocks"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "title",
                  "description",
                  "slug",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.312Z",
                          "type": "string"
                        },
                        "cover": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "author": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiAuthorAuthorDocument"
                        },
                        "category": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
                        },
                        "blocks": {
                          "description": "A dynamic zone field",
                          "type": "array",
                          "items": {}
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "article"
        ]
      }
    },
    "/authors": {
      "get": {
        "operationId": "author/get/authors",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "email",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "email",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "email",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "email",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "email",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "email",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "avatar",
                    "articles"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "avatar",
                      "articles"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "email": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-10-30T04:03:24.319Z",
                            "type": "string"
                          },
                          "avatar": {
                            "description": "A media field",
                            "$ref": "#/components/schemas/PluginUploadFileDocument"
                          },
                          "articles": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiArticleArticleDocument"
                            }
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "author"
        ]
      },
      "post": {
        "operationId": "author/post/authors",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "email",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "avatar",
                    "articles"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "avatar",
                      "articles"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "email": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.334Z",
                          "type": "string"
                        },
                        "avatar": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "articles": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiArticleArticleDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "email": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.332Z",
                        "type": "string"
                      },
                      "avatar": {
                        "description": "A media field"
                      },
                      "articles": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "required": [
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/authors/{id}": {
      "get": {
        "operationId": "author/get/authors_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "email",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "avatar",
                    "articles"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "avatar",
                      "articles"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "email",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "email",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "email",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "email",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "email",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "email": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.329Z",
                          "type": "string"
                        },
                        "avatar": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "articles": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiArticleArticleDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "author"
        ]
      },
      "put": {
        "operationId": "author/put/authors_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "email",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "avatar",
                    "articles"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "avatar",
                      "articles"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "email": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.339Z",
                          "type": "string"
                        },
                        "avatar": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "articles": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiArticleArticleDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "author"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "email": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.337Z",
                        "type": "string"
                      },
                      "avatar": {
                        "description": "A media field"
                      },
                      "articles": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "author/delete/authors_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "email",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "avatar",
                    "articles"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "avatar",
                      "articles"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "email",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "email": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.342Z",
                          "type": "string"
                        },
                        "avatar": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "articles": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiArticleArticleDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "author"
        ]
      }
    },
    "/categories": {
      "get": {
        "operationId": "category/get/categories",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "slug",
                    "description",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "slug",
                      "description",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "slug",
                      "description",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "slug",
                        "description",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "articles"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "articles"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "slug": {
                            "description": "A UID field",
                            "type": "string"
                          },
                          "description": {
                            "description": "A text field",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-10-30T04:03:24.349Z",
                            "type": "string"
                          },
                          "articles": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiArticleArticleDocument"
                            }
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "category"
        ]
      },
      "post": {
        "operationId": "category/post/categories",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "articles"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "articles"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.357Z",
                          "type": "string"
                        },
                        "articles": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiArticleArticleDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "category"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "slug": {
                        "description": "A UID field",
                        "type": "string"
                      },
                      "description": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.355Z",
                        "type": "string"
                      },
                      "articles": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "required": [
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "operationId": "category/get/categories_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "articles"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "articles"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "name",
                    "slug",
                    "description",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "slug",
                      "description",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "name",
                      "slug",
                      "description",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "name",
                        "slug",
                        "description",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.353Z",
                          "type": "string"
                        },
                        "articles": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiArticleArticleDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "category"
        ]
      },
      "put": {
        "operationId": "category/put/categories_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "articles"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "articles"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.361Z",
                          "type": "string"
                        },
                        "articles": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiArticleArticleDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "category"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "slug": {
                        "description": "A UID field",
                        "type": "string"
                      },
                      "description": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.359Z",
                        "type": "string"
                      },
                      "articles": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "category/delete/categories_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "articles"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "articles"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "name",
                  "slug",
                  "description",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.368Z",
                          "type": "string"
                        },
                        "articles": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiArticleArticleDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "category"
        ]
      }
    },
    "/colours": {
      "get": {
        "operationId": "colour/get/colours",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Colour",
                  "Hexcode",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "Colour",
                  "Hexcode",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "Colour",
                    "Hexcode",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Colour",
                      "Hexcode",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "Colour",
                      "Hexcode",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "Colour",
                        "Hexcode",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "product_varients"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "product_varients"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "Colour": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "Hexcode": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-10-30T04:03:24.374Z",
                            "type": "string"
                          },
                          "product_varients": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiProductVarientProductVarientDocument"
                            }
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "colour"
        ]
      },
      "post": {
        "operationId": "colour/post/colours",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Colour",
                  "Hexcode",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "product_varients"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "product_varients"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "Colour": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "Hexcode": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.398Z",
                          "type": "string"
                        },
                        "product_varients": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductVarientProductVarientDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "colour"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "Colour": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "Hexcode": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.397Z",
                        "type": "string"
                      },
                      "product_varients": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "required": [
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/colours/{id}": {
      "get": {
        "operationId": "colour/get/colours_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Colour",
                  "Hexcode",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "product_varients"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "product_varients"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "Colour",
                  "Hexcode",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "Colour",
                    "Hexcode",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Colour",
                      "Hexcode",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "Colour",
                      "Hexcode",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "Colour",
                        "Hexcode",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "Colour": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "Hexcode": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.395Z",
                          "type": "string"
                        },
                        "product_varients": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductVarientProductVarientDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "colour"
        ]
      },
      "put": {
        "operationId": "colour/put/colours_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Colour",
                  "Hexcode",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "product_varients"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "product_varients"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "Colour": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "Hexcode": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.407Z",
                          "type": "string"
                        },
                        "product_varients": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductVarientProductVarientDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "colour"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "Colour": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "Hexcode": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.405Z",
                        "type": "string"
                      },
                      "product_varients": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "colour/delete/colours_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Colour",
                  "Hexcode",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "product_varients"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "product_varients"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "Colour",
                  "Hexcode",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "Colour": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "Hexcode": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.409Z",
                          "type": "string"
                        },
                        "product_varients": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductVarientProductVarientDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "colour"
        ]
      }
    },
    "/global": {
      "get": {
        "operationId": "global/get/global",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siteName",
                  "siteDescription",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "favicon",
                    "defaultSeo"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "favicon",
                      "defaultSeo"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "siteName",
                  "siteDescription",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "siteName": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "siteDescription": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.414Z",
                          "type": "string"
                        },
                        "favicon": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "defaultSeo": {
                          "description": "A component field",
                          "$ref": "#/components/schemas/SharedSeoEntry"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "siteName",
                        "siteDescription",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "global"
        ]
      },
      "put": {
        "operationId": "global/put/global",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siteName",
                  "siteDescription",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "favicon",
                    "defaultSeo"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "favicon",
                      "defaultSeo"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "siteName": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "siteDescription": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.419Z",
                          "type": "string"
                        },
                        "favicon": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "defaultSeo": {
                          "description": "A component field",
                          "$ref": "#/components/schemas/SharedSeoEntry"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "siteName",
                        "siteDescription",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "global"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "siteName": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "siteDescription": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.418Z",
                        "type": "string"
                      },
                      "favicon": {
                        "description": "A media field"
                      },
                      "defaultSeo": {
                        "description": "A component field"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "global/delete/global",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siteName",
                  "siteDescription",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "favicon",
                    "defaultSeo"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "favicon",
                      "defaultSeo"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "siteName": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "siteDescription": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.421Z",
                          "type": "string"
                        },
                        "favicon": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "defaultSeo": {
                          "description": "A component field",
                          "$ref": "#/components/schemas/SharedSeoEntry"
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "siteName",
                        "siteDescription",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "global"
        ]
      }
    },
    "/products": {
      "get": {
        "operationId": "product/get/products",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "desc",
                  "price",
                  "isNew",
                  "quantity",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "title",
                  "desc",
                  "price",
                  "isNew",
                  "quantity",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "title",
                    "desc",
                    "price",
                    "isNew",
                    "quantity",
                    "type",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "title",
                      "desc",
                      "price",
                      "isNew",
                      "quantity",
                      "type",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "title",
                      "desc",
                      "price",
                      "isNew",
                      "quantity",
                      "type",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "title",
                        "desc",
                        "price",
                        "isNew",
                        "quantity",
                        "type",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "img",
                    "img2",
                    "product_categories",
                    "sub_product_categories",
                    "product_varients",
                    "wishlists"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "img",
                      "img2",
                      "product_categories",
                      "sub_product_categories",
                      "product_varients",
                      "wishlists"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "title": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "desc": {
                            "description": "A text field",
                            "type": "string"
                          },
                          "price": {
                            "description": "A decimal field",
                            "type": "number"
                          },
                          "isNew": {
                            "description": "A boolean field",
                            "default": false,
                            "type": "boolean"
                          },
                          "quantity": {
                            "description": "An integer field",
                            "default": 1,
                            "type": "integer",
                            "minimum": -9007199254740991,
                            "maximum": 9007199254740991
                          },
                          "type": {
                            "description": "An enum field",
                            "type": "string",
                            "enum": [
                              "featured",
                              "normal",
                              "trending"
                            ]
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-10-30T04:03:24.427Z",
                            "type": "string"
                          },
                          "img": {
                            "description": "A media field",
                            "$ref": "#/components/schemas/PluginUploadFileDocument"
                          },
                          "img2": {
                            "description": "A media field",
                            "$ref": "#/components/schemas/PluginUploadFileDocument"
                          },
                          "product_categories": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiProductCategoryProductCategoryDocument"
                            }
                          },
                          "sub_product_categories": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiSubProductCategorySubProductCategoryDocument"
                            }
                          },
                          "product_varients": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiProductVarientProductVarientDocument"
                            }
                          },
                          "wishlists": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiWishlistWishlistDocument"
                            }
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "isNew",
                          "quantity",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product"
        ]
      },
      "post": {
        "operationId": "product/post/products",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "desc",
                  "price",
                  "isNew",
                  "quantity",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "img",
                    "img2",
                    "product_categories",
                    "sub_product_categories",
                    "product_varients",
                    "wishlists"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "img",
                      "img2",
                      "product_categories",
                      "sub_product_categories",
                      "product_varients",
                      "wishlists"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "desc": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "price": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "isNew": {
                          "description": "A boolean field",
                          "default": false,
                          "type": "boolean"
                        },
                        "quantity": {
                          "description": "An integer field",
                          "default": 1,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "type": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "featured",
                            "normal",
                            "trending"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.444Z",
                          "type": "string"
                        },
                        "img": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "img2": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "product_categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductCategoryProductCategoryDocument"
                          }
                        },
                        "sub_product_categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiSubProductCategorySubProductCategoryDocument"
                          }
                        },
                        "product_varients": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductVarientProductVarientDocument"
                          }
                        },
                        "wishlists": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiWishlistWishlistDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "isNew",
                        "quantity",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "desc": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "price": {
                        "description": "A decimal field",
                        "type": "number"
                      },
                      "isNew": {
                        "description": "A boolean field",
                        "default": false,
                        "type": "string",
                        "enum": [
                          "0",
                          "1",
                          "t",
                          "true",
                          "f",
                          "false"
                        ]
                      },
                      "quantity": {
                        "description": "A float field",
                        "default": 1,
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "type": {
                        "description": "An enum field",
                        "type": "string",
                        "enum": [
                          "featured",
                          "normal",
                          "trending"
                        ]
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.442Z",
                        "type": "string"
                      },
                      "img": {
                        "description": "A media field"
                      },
                      "img2": {
                        "description": "A media field"
                      },
                      "product_categories": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "sub_product_categories": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "product_varients": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "wishlists": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "required": [
                      "isNew",
                      "quantity",
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "operationId": "product/get/products_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "desc",
                  "price",
                  "isNew",
                  "quantity",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "img",
                    "img2",
                    "product_categories",
                    "sub_product_categories",
                    "product_varients",
                    "wishlists"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "img",
                      "img2",
                      "product_categories",
                      "sub_product_categories",
                      "product_varients",
                      "wishlists"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "title",
                  "desc",
                  "price",
                  "isNew",
                  "quantity",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "title",
                    "desc",
                    "price",
                    "isNew",
                    "quantity",
                    "type",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "title",
                      "desc",
                      "price",
                      "isNew",
                      "quantity",
                      "type",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "title",
                      "desc",
                      "price",
                      "isNew",
                      "quantity",
                      "type",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "title",
                        "desc",
                        "price",
                        "isNew",
                        "quantity",
                        "type",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "desc": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "price": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "isNew": {
                          "description": "A boolean field",
                          "default": false,
                          "type": "boolean"
                        },
                        "quantity": {
                          "description": "An integer field",
                          "default": 1,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "type": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "featured",
                            "normal",
                            "trending"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.437Z",
                          "type": "string"
                        },
                        "img": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "img2": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "product_categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductCategoryProductCategoryDocument"
                          }
                        },
                        "sub_product_categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiSubProductCategorySubProductCategoryDocument"
                          }
                        },
                        "product_varients": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductVarientProductVarientDocument"
                          }
                        },
                        "wishlists": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiWishlistWishlistDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "isNew",
                        "quantity",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product"
        ]
      },
      "put": {
        "operationId": "product/put/products_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "desc",
                  "price",
                  "isNew",
                  "quantity",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "img",
                    "img2",
                    "product_categories",
                    "sub_product_categories",
                    "product_varients",
                    "wishlists"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "img",
                      "img2",
                      "product_categories",
                      "sub_product_categories",
                      "product_varients",
                      "wishlists"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "desc": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "price": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "isNew": {
                          "description": "A boolean field",
                          "default": false,
                          "type": "boolean"
                        },
                        "quantity": {
                          "description": "An integer field",
                          "default": 1,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "type": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "featured",
                            "normal",
                            "trending"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.450Z",
                          "type": "string"
                        },
                        "img": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "img2": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "product_categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductCategoryProductCategoryDocument"
                          }
                        },
                        "sub_product_categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiSubProductCategorySubProductCategoryDocument"
                          }
                        },
                        "product_varients": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductVarientProductVarientDocument"
                          }
                        },
                        "wishlists": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiWishlistWishlistDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "isNew",
                        "quantity",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "desc": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "price": {
                        "description": "A decimal field",
                        "type": "number"
                      },
                      "isNew": {
                        "description": "A boolean field",
                        "default": false,
                        "type": "string",
                        "enum": [
                          "0",
                          "1",
                          "t",
                          "true",
                          "f",
                          "false"
                        ]
                      },
                      "quantity": {
                        "description": "A float field",
                        "default": 1,
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "type": {
                        "description": "An enum field",
                        "type": "string",
                        "enum": [
                          "featured",
                          "normal",
                          "trending"
                        ]
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.448Z",
                        "type": "string"
                      },
                      "img": {
                        "description": "A media field"
                      },
                      "img2": {
                        "description": "A media field"
                      },
                      "product_categories": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "sub_product_categories": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "product_varients": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "wishlists": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "product/delete/products_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "desc",
                  "price",
                  "isNew",
                  "quantity",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "img",
                    "img2",
                    "product_categories",
                    "sub_product_categories",
                    "product_varients",
                    "wishlists"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "img",
                      "img2",
                      "product_categories",
                      "sub_product_categories",
                      "product_varients",
                      "wishlists"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "title",
                  "desc",
                  "price",
                  "isNew",
                  "quantity",
                  "type",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "desc": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "price": {
                          "description": "A decimal field",
                          "type": "number"
                        },
                        "isNew": {
                          "description": "A boolean field",
                          "default": false,
                          "type": "boolean"
                        },
                        "quantity": {
                          "description": "An integer field",
                          "default": 1,
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "type": {
                          "description": "An enum field",
                          "type": "string",
                          "enum": [
                            "featured",
                            "normal",
                            "trending"
                          ]
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.453Z",
                          "type": "string"
                        },
                        "img": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "img2": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "product_categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductCategoryProductCategoryDocument"
                          }
                        },
                        "sub_product_categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiSubProductCategorySubProductCategoryDocument"
                          }
                        },
                        "product_varients": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductVarientProductVarientDocument"
                          }
                        },
                        "wishlists": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiWishlistWishlistDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "isNew",
                        "quantity",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product"
        ]
      }
    },
    "/product-categories/key": {
      "get": {
        "operationId": "product-category/get/product_categories_key",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product-category"
        ]
      }
    },
    "/product-categories/more-stuff": {
      "get": {
        "operationId": "product-category/get/product_categories_more_stuff",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product-category"
        ]
      }
    },
    "/product-categories/custom-query": {
      "get": {
        "operationId": "product-category/get/product_categories_custom_query",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product-category"
        ]
      }
    },
    "/product-categories": {
      "get": {
        "operationId": "product-category/get/product_categories",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "desc",
                  "slug",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "title",
                  "desc",
                  "slug",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "title",
                    "desc",
                    "slug",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "title",
                      "desc",
                      "slug",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "title",
                      "desc",
                      "slug",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "title",
                        "desc",
                        "slug",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "img",
                    "sub_product_categories",
                    "products"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "img",
                      "sub_product_categories",
                      "products"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "title": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "desc": {
                            "description": "A text field",
                            "type": "string"
                          },
                          "slug": {
                            "description": "A UID field",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-10-30T04:03:24.458Z",
                            "type": "string"
                          },
                          "img": {
                            "description": "A media field",
                            "$ref": "#/components/schemas/PluginUploadFileDocument"
                          },
                          "sub_product_categories": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiSubProductCategorySubProductCategoryDocument"
                            }
                          },
                          "products": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiProductProductDocument"
                            }
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product-category"
        ]
      },
      "post": {
        "operationId": "product-category/post/product_categories",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "desc",
                  "slug",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "img",
                    "sub_product_categories",
                    "products"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "img",
                      "sub_product_categories",
                      "products"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "desc": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.468Z",
                          "type": "string"
                        },
                        "img": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "sub_product_categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiSubProductCategorySubProductCategoryDocument"
                          }
                        },
                        "products": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductProductDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product-category"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "desc": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "slug": {
                        "description": "A UID field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.468Z",
                        "type": "string"
                      },
                      "img": {
                        "description": "A media field"
                      },
                      "sub_product_categories": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "products": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "required": [
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/product-categories/{id}": {
      "get": {
        "operationId": "product-category/get/product_categories_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "desc",
                  "slug",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "img",
                    "sub_product_categories",
                    "products"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "img",
                      "sub_product_categories",
                      "products"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "title",
                  "desc",
                  "slug",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "title",
                    "desc",
                    "slug",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "title",
                      "desc",
                      "slug",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "title",
                      "desc",
                      "slug",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "title",
                        "desc",
                        "slug",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "desc": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.465Z",
                          "type": "string"
                        },
                        "img": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "sub_product_categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiSubProductCategorySubProductCategoryDocument"
                          }
                        },
                        "products": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductProductDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product-category"
        ]
      },
      "put": {
        "operationId": "product-category/put/product_categories_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "desc",
                  "slug",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "img",
                    "sub_product_categories",
                    "products"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "img",
                      "sub_product_categories",
                      "products"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "desc": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.472Z",
                          "type": "string"
                        },
                        "img": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "sub_product_categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiSubProductCategorySubProductCategoryDocument"
                          }
                        },
                        "products": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductProductDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product-category"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "desc": {
                        "description": "A text field",
                        "type": "string"
                      },
                      "slug": {
                        "description": "A UID field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.471Z",
                        "type": "string"
                      },
                      "img": {
                        "description": "A media field"
                      },
                      "sub_product_categories": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "products": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "product-category/delete/product_categories_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "desc",
                  "slug",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "img",
                    "sub_product_categories",
                    "products"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "img",
                      "sub_product_categories",
                      "products"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "title",
                  "desc",
                  "slug",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "desc": {
                          "description": "A text field",
                          "type": "string"
                        },
                        "slug": {
                          "description": "A UID field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.473Z",
                          "type": "string"
                        },
                        "img": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "sub_product_categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiSubProductCategorySubProductCategoryDocument"
                          }
                        },
                        "products": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductProductDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product-category"
        ]
      }
    },
    "/product-varients": {
      "get": {
        "operationId": "product-varient/get/product_varients",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "colours",
                    "VariantImage",
                    "product",
                    "wishlists"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "colours",
                      "VariantImage",
                      "product",
                      "wishlists"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-10-30T04:03:24.477Z",
                            "type": "string"
                          },
                          "colours": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiColourColourDocument"
                            }
                          },
                          "VariantImage": {
                            "description": "A media field",
                            "$ref": "#/components/schemas/PluginUploadFileDocument"
                          },
                          "product": {
                            "description": "A relational field",
                            "$ref": "#/components/schemas/ApiProductProductDocument"
                          },
                          "wishlists": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiWishlistWishlistDocument"
                            }
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product-varient"
        ]
      },
      "post": {
        "operationId": "product-varient/post/product_varients",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "colours",
                    "VariantImage",
                    "product",
                    "wishlists"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "colours",
                      "VariantImage",
                      "product",
                      "wishlists"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.485Z",
                          "type": "string"
                        },
                        "colours": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiColourColourDocument"
                          }
                        },
                        "VariantImage": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "product": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiProductProductDocument"
                        },
                        "wishlists": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiWishlistWishlistDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product-varient"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.484Z",
                        "type": "string"
                      },
                      "colours": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "VariantImage": {
                        "description": "A media field"
                      },
                      "product": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "wishlists": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "required": [
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/product-varients/{id}": {
      "get": {
        "operationId": "product-varient/get/product_varients_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "colours",
                    "VariantImage",
                    "product",
                    "wishlists"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "colours",
                      "VariantImage",
                      "product",
                      "wishlists"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.479Z",
                          "type": "string"
                        },
                        "colours": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiColourColourDocument"
                          }
                        },
                        "VariantImage": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "product": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiProductProductDocument"
                        },
                        "wishlists": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiWishlistWishlistDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product-varient"
        ]
      },
      "put": {
        "operationId": "product-varient/put/product_varients_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "colours",
                    "VariantImage",
                    "product",
                    "wishlists"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "colours",
                      "VariantImage",
                      "product",
                      "wishlists"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.488Z",
                          "type": "string"
                        },
                        "colours": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiColourColourDocument"
                          }
                        },
                        "VariantImage": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "product": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiProductProductDocument"
                        },
                        "wishlists": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiWishlistWishlistDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product-varient"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.487Z",
                        "type": "string"
                      },
                      "colours": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "VariantImage": {
                        "description": "A media field"
                      },
                      "product": {
                        "description": "A relational field",
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "wishlists": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "product-varient/delete/product_varients_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "colours",
                    "VariantImage",
                    "product",
                    "wishlists"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "colours",
                      "VariantImage",
                      "product",
                      "wishlists"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.490Z",
                          "type": "string"
                        },
                        "colours": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiColourColourDocument"
                          }
                        },
                        "VariantImage": {
                          "description": "A media field",
                          "$ref": "#/components/schemas/PluginUploadFileDocument"
                        },
                        "product": {
                          "description": "A relational field",
                          "$ref": "#/components/schemas/ApiProductProductDocument"
                        },
                        "wishlists": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiWishlistWishlistDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "product-varient"
        ]
      }
    },
    "/sub-product-categories": {
      "get": {
        "operationId": "sub-product-category/get/sub_product_categories",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "title",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "title",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "title",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "title",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "title",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "products",
                    "product_categories"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "products",
                      "product_categories"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "title": {
                            "description": "A string field",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-10-30T04:03:24.494Z",
                            "type": "string"
                          },
                          "products": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiProductProductDocument"
                            }
                          },
                          "product_categories": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiProductCategoryProductCategoryDocument"
                            }
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "sub-product-category"
        ]
      },
      "post": {
        "operationId": "sub-product-category/post/sub_product_categories",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "products",
                    "product_categories"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "products",
                      "product_categories"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.498Z",
                          "type": "string"
                        },
                        "products": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductProductDocument"
                          }
                        },
                        "product_categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductCategoryProductCategoryDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "sub-product-category"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.497Z",
                        "type": "string"
                      },
                      "products": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "product_categories": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "required": [
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/sub-product-categories/{id}": {
      "get": {
        "operationId": "sub-product-category/get/sub_product_categories_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "products",
                    "product_categories"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "products",
                      "product_categories"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "title",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "title",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "title",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "title",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "title",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.496Z",
                          "type": "string"
                        },
                        "products": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductProductDocument"
                          }
                        },
                        "product_categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductCategoryProductCategoryDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "sub-product-category"
        ]
      },
      "put": {
        "operationId": "sub-product-category/put/sub_product_categories_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "products",
                    "product_categories"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "products",
                      "product_categories"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.500Z",
                          "type": "string"
                        },
                        "products": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductProductDocument"
                          }
                        },
                        "product_categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductCategoryProductCategoryDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "sub-product-category"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "description": "A string field",
                        "type": "string"
                      },
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.499Z",
                        "type": "string"
                      },
                      "products": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "product_categories": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "sub-product-category/delete/sub_product_categories_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "products",
                    "product_categories"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "products",
                      "product_categories"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "title",
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "title": {
                          "description": "A string field",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.505Z",
                          "type": "string"
                        },
                        "products": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductProductDocument"
                          }
                        },
                        "product_categories": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductCategoryProductCategoryDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "sub-product-category"
        ]
      }
    },
    "/wishlists": {
      "get": {
        "operationId": "wishlist/get/wishlists",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "_q",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "products",
                    "product_varients",
                    "users_permissions_users"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "products",
                      "product_varients",
                      "users_permissions_users"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "documentId": {
                            "description": "The document ID, represented by a UUID",
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "id": {
                            "type": "number"
                          },
                          "createdAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "updatedAt": {
                            "description": "A datetime field",
                            "type": "string"
                          },
                          "publishedAt": {
                            "description": "A datetime field",
                            "default": "2025-10-30T04:03:24.509Z",
                            "type": "string"
                          },
                          "products": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiProductProductDocument"
                            }
                          },
                          "product_varients": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/ApiProductVarientProductVarientDocument"
                            }
                          },
                          "users_permissions_users": {
                            "description": "A relational field",
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                            }
                          }
                        },
                        "required": [
                          "documentId",
                          "id",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "wishlist"
        ]
      },
      "post": {
        "operationId": "wishlist/post/wishlists",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "products",
                    "product_varients",
                    "users_permissions_users"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "products",
                      "product_varients",
                      "users_permissions_users"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.514Z",
                          "type": "string"
                        },
                        "products": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductProductDocument"
                          }
                        },
                        "product_varients": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductVarientProductVarientDocument"
                          }
                        },
                        "users_permissions_users": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "wishlist"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.513Z",
                        "type": "string"
                      },
                      "products": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "product_varients": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "users_permissions_users": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "required": [
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/wishlists/{id}": {
      "get": {
        "operationId": "wishlist/get/wishlists_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "products",
                    "product_varients",
                    "users_permissions_users"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "products",
                      "product_varients",
                      "users_permissions_users"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the result",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string",
                    "enum": [
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ]
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string",
                      "enum": [
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ]
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.511Z",
                          "type": "string"
                        },
                        "products": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductProductDocument"
                          }
                        },
                        "product_varients": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductVarientProductVarientDocument"
                          }
                        },
                        "users_permissions_users": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "wishlist"
        ]
      },
      "put": {
        "operationId": "wishlist/put/wishlists_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "products",
                    "product_varients",
                    "users_permissions_users"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "products",
                      "product_varients",
                      "users_permissions_users"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.516Z",
                          "type": "string"
                        },
                        "products": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductProductDocument"
                          }
                        },
                        "product_varients": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductVarientProductVarientDocument"
                          }
                        },
                        "users_permissions_users": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "wishlist"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "publishedAt": {
                        "description": "A datetime field",
                        "default": "2025-10-30T04:03:24.515Z",
                        "type": "string"
                      },
                      "products": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "product_varients": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      },
                      "users_permissions_users": {
                        "description": "A relational field",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "wishlist/delete/wishlists_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The document ID, represented by a UUID",
              "type": "string",
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "The fields to return, this doesn't include populatable fields like relations, components, files, or dynamic zones",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              }
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "anyOf": [
                {
                  "description": "Populate all the first level relations, components, files, and dynamic zones for the entry",
                  "readOnly": true,
                  "type": "string",
                  "const": "*"
                },
                {
                  "description": "Populate a single relation, component, file, or dynamic zone",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "products",
                    "product_varients",
                    "users_permissions_users"
                  ]
                },
                {
                  "description": "Populate a selection of multiple relations, components, files, or dynamic zones",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "products",
                      "product_varients",
                      "users_permissions_users"
                    ]
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Filters to apply to the query",
              "type": "object",
              "propertyNames": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "updatedAt",
                  "publishedAt"
                ]
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Fetch documents based on their status. Default to \"published\" if not specified.",
              "type": "string",
              "enum": [
                "draft",
                "published"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "documentId": {
                          "description": "The document ID, represented by a UUID",
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "id": {
                          "type": "number"
                        },
                        "createdAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "updatedAt": {
                          "description": "A datetime field",
                          "type": "string"
                        },
                        "publishedAt": {
                          "description": "A datetime field",
                          "default": "2025-10-30T04:03:24.517Z",
                          "type": "string"
                        },
                        "products": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductProductDocument"
                          }
                        },
                        "product_varients": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApiProductVarientProductVarientDocument"
                          }
                        },
                        "users_permissions_users": {
                          "description": "A relational field",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
                          }
                        }
                      },
                      "required": [
                        "documentId",
                        "id",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "wishlist"
        ]
      }
    },
    "/content-types": {
      "get": {
        "operationId": "content-type-builder/get/content_types",
        "parameters": [
          {
            "name": "kind",
            "in": "query",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string",
              "enum": [
                "collectionType",
                "singleType"
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "string",
                            "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
                          },
                          "plugin": {
                            "type": "string"
                          },
                          "apiID": {
                            "type": "string"
                          },
                          "schema": {
                            "type": "object",
                            "properties": {
                              "displayName": {
                                "type": "string"
                              },
                              "singularName": {
                                "type": "string"
                              },
                              "pluralName": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "draftAndPublish": {
                                "type": "boolean"
                              },
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "collectionType",
                                  "singleType"
                                ]
                              },
                              "collectionName": {
                                "type": "string"
                              },
                              "attributes": {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "media"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "multiple": {
                                          "type": "boolean"
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "allowedTypes": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "multiple"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "relation"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "relation": {
                                          "type": "string"
                                        },
                                        "target": {
                                          "type": "string",
                                          "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
                                        },
                                        "targetAttribute": {
                                          "anyOf": [
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "null"
                                            }
                                          ]
                                        },
                                        "autoPopulate": {
                                          "type": "boolean"
                                        },
                                        "mappedBy": {
                                          "type": "string"
                                        },
                                        "inversedBy": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "relation",
                                        "target",
                                        "targetAttribute"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "component"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "component": {
                                          "type": "string"
                                        },
                                        "repeatable": {
                                          "type": "boolean"
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "min": {
                                          "type": "number"
                                        },
                                        "max": {
                                          "type": "number"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "component",
                                        "repeatable"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "dynamiczone"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "components": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "pattern": "^[\\w-]+\\.[\\w-]+$"
                                          }
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "min": {
                                          "type": "number"
                                        },
                                        "max": {
                                          "type": "number"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "components"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "uid"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "targetField": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string"
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "unique": {
                                          "type": "boolean"
                                        },
                                        "default": {},
                                        "min": {
                                          "anyOf": [
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        },
                                        "max": {
                                          "anyOf": [
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        },
                                        "minLength": {
                                          "type": "number"
                                        },
                                        "maxLength": {
                                          "type": "number"
                                        },
                                        "enum": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "regex": {
                                          "type": "string"
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "configurable": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false
                                    }
                                  ]
                                }
                              },
                              "visible": {
                                "type": "boolean"
                              },
                              "restrictRelationsTo": {
                                "anyOf": [
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "pluginOptions": {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {}
                              },
                              "options": {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {}
                              },
                              "reviewWorkflows": {
                                "type": "boolean"
                              },
                              "populateCreatorFields": {
                                "type": "boolean"
                              },
                              "comment": {
                                "type": "string"
                              },
                              "version": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "displayName",
                              "singularName",
                              "pluralName",
                              "description",
                              "draftAndPublish",
                              "kind",
                              "attributes",
                              "visible",
                              "restrictRelationsTo"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "uid",
                          "apiID",
                          "schema"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "content-type-builder"
        ]
      }
    },
    "/content-types/{uid}": {
      "get": {
        "operationId": "content-type-builder/get/content_types_by_uid",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string",
              "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "uid": {
                          "type": "string",
                          "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
                        },
                        "plugin": {
                          "type": "string"
                        },
                        "apiID": {
                          "type": "string"
                        },
                        "schema": {
                          "type": "object",
                          "properties": {
                            "displayName": {
                              "type": "string"
                            },
                            "singularName": {
                              "type": "string"
                            },
                            "pluralName": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "draftAndPublish": {
                              "type": "boolean"
                            },
                            "kind": {
                              "type": "string",
                              "enum": [
                                "collectionType",
                                "singleType"
                              ]
                            },
                            "collectionName": {
                              "type": "string"
                            },
                            "attributes": {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "media"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "multiple": {
                                        "type": "boolean"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "allowedTypes": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "multiple"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "relation"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "relation": {
                                        "type": "string"
                                      },
                                      "target": {
                                        "type": "string",
                                        "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
                                      },
                                      "targetAttribute": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ]
                                      },
                                      "autoPopulate": {
                                        "type": "boolean"
                                      },
                                      "mappedBy": {
                                        "type": "string"
                                      },
                                      "inversedBy": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "relation",
                                      "target",
                                      "targetAttribute"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "component"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "component": {
                                        "type": "string"
                                      },
                                      "repeatable": {
                                        "type": "boolean"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "min": {
                                        "type": "number"
                                      },
                                      "max": {
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "component",
                                      "repeatable"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "dynamiczone"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "components": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "pattern": "^[\\w-]+\\.[\\w-]+$"
                                        }
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "min": {
                                        "type": "number"
                                      },
                                      "max": {
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "components"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "uid"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "targetField": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "unique": {
                                        "type": "boolean"
                                      },
                                      "default": {},
                                      "min": {
                                        "anyOf": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "max": {
                                        "anyOf": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "minLength": {
                                        "type": "number"
                                      },
                                      "maxLength": {
                                        "type": "number"
                                      },
                                      "enum": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "regex": {
                                        "type": "string"
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "configurable": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "visible": {
                              "type": "boolean"
                            },
                            "restrictRelationsTo": {
                              "anyOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "pluginOptions": {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {}
                            },
                            "options": {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {}
                            },
                            "reviewWorkflows": {
                              "type": "boolean"
                            },
                            "populateCreatorFields": {
                              "type": "boolean"
                            },
                            "comment": {
                              "type": "string"
                            },
                            "version": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "displayName",
                            "singularName",
                            "pluralName",
                            "description",
                            "draftAndPublish",
                            "kind",
                            "attributes",
                            "visible",
                            "restrictRelationsTo"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "uid",
                        "apiID",
                        "schema"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "content-type-builder"
        ]
      }
    },
    "/components": {
      "get": {
        "operationId": "content-type-builder/get/components",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uid": {
                            "type": "string",
                            "pattern": "^[\\w-]+\\.[\\w-]+$"
                          },
                          "category": {
                            "type": "string"
                          },
                          "apiId": {
                            "type": "string"
                          },
                          "schema": {
                            "type": "object",
                            "properties": {
                              "displayName": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "icon": {
                                "type": "string"
                              },
                              "connection": {
                                "type": "string"
                              },
                              "collectionName": {
                                "type": "string"
                              },
                              "attributes": {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "media"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "multiple": {
                                          "type": "boolean"
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "allowedTypes": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "multiple"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "relation"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "relation": {
                                          "type": "string"
                                        },
                                        "target": {
                                          "type": "string",
                                          "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
                                        },
                                        "targetAttribute": {
                                          "anyOf": [
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "null"
                                            }
                                          ]
                                        },
                                        "autoPopulate": {
                                          "type": "boolean"
                                        },
                                        "mappedBy": {
                                          "type": "string"
                                        },
                                        "inversedBy": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "relation",
                                        "target",
                                        "targetAttribute"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "component"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "component": {
                                          "type": "string"
                                        },
                                        "repeatable": {
                                          "type": "boolean"
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "min": {
                                          "type": "number"
                                        },
                                        "max": {
                                          "type": "number"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "component",
                                        "repeatable"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "dynamiczone"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "components": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "pattern": "^[\\w-]+\\.[\\w-]+$"
                                          }
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "min": {
                                          "type": "number"
                                        },
                                        "max": {
                                          "type": "number"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "components"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "uid"
                                        },
                                        "configurable": {
                                          "type": "boolean",
                                          "const": false
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        },
                                        "targetField": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string"
                                        },
                                        "required": {
                                          "type": "boolean"
                                        },
                                        "unique": {
                                          "type": "boolean"
                                        },
                                        "default": {},
                                        "min": {
                                          "anyOf": [
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        },
                                        "max": {
                                          "anyOf": [
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        },
                                        "minLength": {
                                          "type": "number"
                                        },
                                        "maxLength": {
                                          "type": "number"
                                        },
                                        "enum": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "regex": {
                                          "type": "string"
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "configurable": {
                                          "type": "boolean"
                                        },
                                        "pluginOptions": {
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {}
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false
                                    }
                                  ]
                                }
                              },
                              "pluginOptions": {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {}
                              }
                            },
                            "required": [
                              "displayName",
                              "description",
                              "attributes"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "uid",
                          "category",
                          "apiId",
                          "schema"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "content-type-builder"
        ]
      }
    },
    "/components/{uid}": {
      "get": {
        "operationId": "content-type-builder/get/components_by_uid",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string",
              "pattern": "^[\\w-]+\\.[\\w-]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "uid": {
                          "type": "string",
                          "pattern": "^[\\w-]+\\.[\\w-]+$"
                        },
                        "category": {
                          "type": "string"
                        },
                        "apiId": {
                          "type": "string"
                        },
                        "schema": {
                          "type": "object",
                          "properties": {
                            "displayName": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "icon": {
                              "type": "string"
                            },
                            "connection": {
                              "type": "string"
                            },
                            "collectionName": {
                              "type": "string"
                            },
                            "attributes": {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "media"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "multiple": {
                                        "type": "boolean"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "allowedTypes": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "multiple"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "relation"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "relation": {
                                        "type": "string"
                                      },
                                      "target": {
                                        "type": "string",
                                        "pattern": "^((strapi|admin)::[\\w-]+|(api|plugin)::[\\w-]+\\.[\\w-]+)$"
                                      },
                                      "targetAttribute": {
                                        "anyOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ]
                                      },
                                      "autoPopulate": {
                                        "type": "boolean"
                                      },
                                      "mappedBy": {
                                        "type": "string"
                                      },
                                      "inversedBy": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "relation",
                                      "target",
                                      "targetAttribute"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "component"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "component": {
                                        "type": "string"
                                      },
                                      "repeatable": {
                                        "type": "boolean"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "min": {
                                        "type": "number"
                                      },
                                      "max": {
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "component",
                                      "repeatable"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "dynamiczone"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "components": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "pattern": "^[\\w-]+\\.[\\w-]+$"
                                        }
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "min": {
                                        "type": "number"
                                      },
                                      "max": {
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "components"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "uid"
                                      },
                                      "configurable": {
                                        "type": "boolean",
                                        "const": false
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      },
                                      "targetField": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string"
                                      },
                                      "required": {
                                        "type": "boolean"
                                      },
                                      "unique": {
                                        "type": "boolean"
                                      },
                                      "default": {},
                                      "min": {
                                        "anyOf": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "max": {
                                        "anyOf": [
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ]
                                      },
                                      "minLength": {
                                        "type": "number"
                                      },
                                      "maxLength": {
                                        "type": "number"
                                      },
                                      "enum": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "regex": {
                                        "type": "string"
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "configurable": {
                                        "type": "boolean"
                                      },
                                      "pluginOptions": {
                                        "type": "object",
                                        "propertyNames": {
                                          "type": "string"
                                        },
                                        "additionalProperties": {}
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "pluginOptions": {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {}
                            }
                          },
                          "required": [
                            "displayName",
                            "description",
                            "attributes"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "uid",
                        "category",
                        "apiId",
                        "schema"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "content-type-builder"
        ]
      }
    },
    "/": {
      "post": {
        "operationId": "upload/post",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "integer",
              "exclusiveMinimum": 0,
              "maximum": 9007199254740991
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "documentId": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                        },
                        "name": {
                          "type": "string"
                        },
                        "alternativeText": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "caption": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "width": {
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "height": {
                          "type": "integer",
                          "minimum": -9007199254740991,
                          "maximum": 9007199254740991
                        },
                        "formats": {
                          "type": "object",
                          "propertyNames": {
                            "type": "string"
                          },
                          "additionalProperties": {}
                        },
                        "hash": {
                          "type": "string"
                        },
                        "ext": {
                          "type": "string"
                        },
                        "mime": {
                          "type": "string"
                        },
                        "size": {
                          "type": "number"
                        },
                        "url": {
                          "type": "string"
                        },
                        "previewUrl": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "folder": {
                          "type": "number"
                        },
                        "folderPath": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "provider_metadata": {
                          "anyOf": [
                            {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {}
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "createdBy": {
                          "type": "number"
                        },
                        "updatedBy": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "id",
                        "documentId",
                        "name",
                        "hash",
                        "mime",
                        "size",
                        "url",
                        "folderPath",
                        "provider",
                        "createdAt",
                        "updatedAt"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "maximum": 9007199254740991
                          },
                          "documentId": {
                            "type": "string",
                            "format": "uuid",
                            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                          },
                          "name": {
                            "type": "string"
                          },
                          "alternativeText": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "caption": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "width": {
                            "type": "integer",
                            "minimum": -9007199254740991,
                            "maximum": 9007199254740991
                          },
                          "height": {
                            "type": "integer",
                            "minimum": -9007199254740991,
                            "maximum": 9007199254740991
                          },
                          "formats": {
                            "type": "object",
                            "propertyNames": {
                              "type": "string"
                            },
                            "additionalProperties": {}
                          },
                          "hash": {
                            "type": "string"
                          },
                          "ext": {
                            "type": "string"
                          },
                          "mime": {
                            "type": "string"
                          },
                          "size": {
                            "type": "number"
                          },
                          "url": {
                            "type": "string"
                          },
                          "previewUrl": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "folder": {
                            "type": "number"
                          },
                          "folderPath": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "provider_metadata": {
                            "anyOf": [
                              {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {}
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "createdBy": {
                            "type": "number"
                          },
                          "updatedBy": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "id",
                          "documentId",
                          "name",
                          "hash",
                          "mime",
                          "size",
                          "url",
                          "folderPath",
                          "provider",
                          "createdAt",
                          "updatedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "upload"
        ]
      }
    },
    "/files": {
      "get": {
        "operationId": "upload/get/files",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Select specific fields to return in the response",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Specify which relations to populate in the response",
              "anyOf": [
                {
                  "type": "string",
                  "const": "*"
                },
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {}
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the results by specified fields",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string"
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Apply filters to the query",
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "exclusiveMinimum": 0,
                        "maximum": 9007199254740991
                      },
                      "documentId": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "name": {
                        "type": "string"
                      },
                      "alternativeText": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "caption": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "width": {
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "height": {
                        "type": "integer",
                        "minimum": -9007199254740991,
                        "maximum": 9007199254740991
                      },
                      "formats": {
                        "type": "object",
                        "propertyNames": {
                          "type": "string"
                        },
                        "additionalProperties": {}
                      },
                      "hash": {
                        "type": "string"
                      },
                      "ext": {
                        "type": "string"
                      },
                      "mime": {
                        "type": "string"
                      },
                      "size": {
                        "type": "number"
                      },
                      "url": {
                        "type": "string"
                      },
                      "previewUrl": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "folder": {
                        "type": "number"
                      },
                      "folderPath": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "provider_metadata": {
                        "anyOf": [
                          {
                            "type": "object",
                            "propertyNames": {
                              "type": "string"
                            },
                            "additionalProperties": {}
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "createdBy": {
                        "type": "number"
                      },
                      "updatedBy": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "id",
                      "documentId",
                      "name",
                      "hash",
                      "mime",
                      "size",
                      "url",
                      "folderPath",
                      "provider",
                      "createdAt",
                      "updatedAt"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "upload"
        ]
      }
    },
    "/files/{id}": {
      "get": {
        "operationId": "upload/get/files_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "integer",
              "exclusiveMinimum": 0,
              "maximum": 9007199254740991
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Select specific fields to return in the response",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Specify which relations to populate in the response",
              "anyOf": [
                {
                  "type": "string",
                  "const": "*"
                },
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {}
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "exclusiveMinimum": 0,
                      "maximum": 9007199254740991
                    },
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                    },
                    "name": {
                      "type": "string"
                    },
                    "alternativeText": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "caption": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "width": {
                      "type": "integer",
                      "minimum": -9007199254740991,
                      "maximum": 9007199254740991
                    },
                    "height": {
                      "type": "integer",
                      "minimum": -9007199254740991,
                      "maximum": 9007199254740991
                    },
                    "formats": {
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {}
                    },
                    "hash": {
                      "type": "string"
                    },
                    "ext": {
                      "type": "string"
                    },
                    "mime": {
                      "type": "string"
                    },
                    "size": {
                      "type": "number"
                    },
                    "url": {
                      "type": "string"
                    },
                    "previewUrl": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "folder": {
                      "type": "number"
                    },
                    "folderPath": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "provider_metadata": {
                      "anyOf": [
                        {
                          "type": "object",
                          "propertyNames": {
                            "type": "string"
                          },
                          "additionalProperties": {}
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "createdBy": {
                      "type": "number"
                    },
                    "updatedBy": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "name",
                    "hash",
                    "mime",
                    "size",
                    "url",
                    "folderPath",
                    "provider",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "upload"
        ]
      },
      "delete": {
        "operationId": "upload/delete/files_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "integer",
              "exclusiveMinimum": 0,
              "maximum": 9007199254740991
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "exclusiveMinimum": 0,
                      "maximum": 9007199254740991
                    },
                    "documentId": {
                      "type": "string",
                      "format": "uuid",
                      "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                    },
                    "name": {
                      "type": "string"
                    },
                    "alternativeText": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "caption": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "width": {
                      "type": "integer",
                      "minimum": -9007199254740991,
                      "maximum": 9007199254740991
                    },
                    "height": {
                      "type": "integer",
                      "minimum": -9007199254740991,
                      "maximum": 9007199254740991
                    },
                    "formats": {
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {}
                    },
                    "hash": {
                      "type": "string"
                    },
                    "ext": {
                      "type": "string"
                    },
                    "mime": {
                      "type": "string"
                    },
                    "size": {
                      "type": "number"
                    },
                    "url": {
                      "type": "string"
                    },
                    "previewUrl": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "folder": {
                      "type": "number"
                    },
                    "folderPath": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "provider_metadata": {
                      "anyOf": [
                        {
                          "type": "object",
                          "propertyNames": {
                            "type": "string"
                          },
                          "additionalProperties": {}
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "createdBy": {
                      "type": "number"
                    },
                    "updatedBy": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "name",
                    "hash",
                    "mime",
                    "size",
                    "url",
                    "folderPath",
                    "provider",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "upload"
        ]
      }
    },
    "/locales": {
      "get": {
        "operationId": "i18n/get/locales",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "exclusiveMinimum": 0,
                        "maximum": 9007199254740991
                      },
                      "documentId": {
                        "type": "string",
                        "format": "uuid",
                        "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
                      },
                      "name": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "publishedAt": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "isDefault": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "documentId",
                      "name",
                      "code",
                      "createdAt",
                      "updatedAt",
                      "publishedAt",
                      "isDefault"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "i18n"
        ]
      }
    },
    "/connect/(.*)": {
      "get": {
        "operationId": "users-permissions/get/connect_____",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/auth/local": {
      "post": {
        "operationId": "users-permissions/post/auth_local",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "jwt": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "documentId": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "confirmed": {
                          "type": "boolean"
                        },
                        "blocked": {
                          "type": "boolean"
                        },
                        "role": {
                          "anyOf": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "description",
                                "type",
                                "createdAt",
                                "updatedAt"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "publishedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "documentId",
                        "username",
                        "email",
                        "provider",
                        "confirmed",
                        "blocked",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "jwt",
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "identifier": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "identifier",
                  "password"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/auth/local/register": {
      "post": {
        "operationId": "users-permissions/post/auth_local_register",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "jwt": {
                          "type": "string"
                        },
                        "refreshToken": {
                          "type": "string"
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "documentId": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "confirmed": {
                              "type": "boolean"
                            },
                            "blocked": {
                              "type": "boolean"
                            },
                            "role": {
                              "anyOf": [
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "anyOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "type",
                                    "createdAt",
                                    "updatedAt"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "publishedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "documentId",
                            "username",
                            "email",
                            "provider",
                            "confirmed",
                            "blocked",
                            "createdAt",
                            "updatedAt",
                            "publishedAt"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "jwt",
                        "user"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "documentId": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "confirmed": {
                              "type": "boolean"
                            },
                            "blocked": {
                              "type": "boolean"
                            },
                            "role": {
                              "anyOf": [
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "anyOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "type",
                                    "createdAt",
                                    "updatedAt"
                                  ],
                                  "additionalProperties": false
                                }
                              ]
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "publishedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "documentId",
                            "username",
                            "email",
                            "provider",
                            "confirmed",
                            "blocked",
                            "createdAt",
                            "updatedAt",
                            "publishedAt"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "user"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "email",
                  "password"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/auth/{provider}/callback": {
      "get": {
        "operationId": "users-permissions/get/auth_by_provider_callback",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "jwt": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "documentId": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "confirmed": {
                          "type": "boolean"
                        },
                        "blocked": {
                          "type": "boolean"
                        },
                        "role": {
                          "anyOf": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "description",
                                "type",
                                "createdAt",
                                "updatedAt"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "publishedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "documentId",
                        "username",
                        "email",
                        "provider",
                        "confirmed",
                        "blocked",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "jwt",
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/auth/forgot-password": {
      "post": {
        "operationId": "users-permissions/post/auth_forgot_password",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ok"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  }
                },
                "required": [
                  "email"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "operationId": "users-permissions/post/auth_reset_password",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "jwt": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "documentId": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "confirmed": {
                          "type": "boolean"
                        },
                        "blocked": {
                          "type": "boolean"
                        },
                        "role": {
                          "anyOf": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "description",
                                "type",
                                "createdAt",
                                "updatedAt"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "publishedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "documentId",
                        "username",
                        "email",
                        "provider",
                        "confirmed",
                        "blocked",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "jwt",
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "passwordConfirmation": {
                    "type": "string"
                  }
                },
                "required": [
                  "code",
                  "password",
                  "passwordConfirmation"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/auth/email-confirmation": {
      "get": {
        "operationId": "users-permissions/get/auth_email_confirmation",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/auth/send-email-confirmation": {
      "post": {
        "operationId": "users-permissions/post/auth_send_email_confirmation",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "sent": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "email",
                    "sent"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  }
                },
                "required": [
                  "email"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/auth/change-password": {
      "post": {
        "operationId": "users-permissions/post/auth_change_password",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "jwt": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "documentId": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "confirmed": {
                          "type": "boolean"
                        },
                        "blocked": {
                          "type": "boolean"
                        },
                        "role": {
                          "anyOf": [
                            {
                              "type": "number"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "type": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "description",
                                "type",
                                "createdAt",
                                "updatedAt"
                              ],
                              "additionalProperties": false
                            }
                          ]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "publishedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "documentId",
                        "username",
                        "email",
                        "provider",
                        "confirmed",
                        "blocked",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "jwt",
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "passwordConfirmation": {
                    "type": "string"
                  }
                },
                "required": [
                  "currentPassword",
                  "password",
                  "passwordConfirmation"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "operationId": "users-permissions/post/auth_refresh",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "users-permissions/post/auth_logout",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/users/count": {
      "get": {
        "operationId": "users-permissions/get/users_count",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Apply filters to the query",
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/users": {
      "get": {
        "operationId": "users-permissions/get/users",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Select specific fields to return in the response",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Specify which relations to populate in the response",
              "anyOf": [
                {
                  "type": "string",
                  "const": "*"
                },
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {}
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Sort the results by specified fields",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {
                    "type": "string",
                    "enum": [
                      "asc",
                      "desc"
                    ]
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string"
                    },
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "pagination",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Pagination parameters",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "withCount": {
                      "description": "Include total count in response",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "anyOf": [
                    {
                      "description": "Page-based pagination",
                      "type": "object",
                      "properties": {
                        "page": {
                          "description": "Page number (1-based)",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pageSize": {
                          "description": "Number of entries per page",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "page",
                        "pageSize"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "description": "Offset-based pagination",
                      "type": "object",
                      "properties": {
                        "start": {
                          "description": "Number of entries to skip",
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "limit": {
                          "description": "Maximum number of entries to return",
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        }
                      },
                      "required": [
                        "start",
                        "limit"
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Apply filters to the query",
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {}
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "documentId": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "provider": {
                        "type": "string"
                      },
                      "confirmed": {
                        "type": "boolean"
                      },
                      "blocked": {
                        "type": "boolean"
                      },
                      "role": {
                        "anyOf": [
                          {
                            "type": "number"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "description": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "type": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "description",
                              "type",
                              "createdAt",
                              "updatedAt"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "publishedAt": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "documentId",
                      "username",
                      "email",
                      "provider",
                      "confirmed",
                      "blocked",
                      "createdAt",
                      "updatedAt",
                      "publishedAt"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      },
      "post": {
        "operationId": "users-permissions/post/users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "documentId": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "confirmed": {
                      "type": "boolean"
                    },
                    "blocked": {
                      "type": "boolean"
                    },
                    "role": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "type": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "type",
                            "createdAt",
                            "updatedAt"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "publishedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "username",
                    "email",
                    "provider",
                    "confirmed",
                    "blocked",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  },
                  "password": {
                    "type": "string"
                  },
                  "role": {
                    "type": "number"
                  }
                },
                "required": [
                  "username",
                  "email",
                  "password"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "operationId": "users-permissions/get/users_me",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Select specific fields to return in the response",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Specify which relations to populate in the response",
              "anyOf": [
                {
                  "type": "string",
                  "const": "*"
                },
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {}
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "documentId": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "confirmed": {
                      "type": "boolean"
                    },
                    "blocked": {
                      "type": "boolean"
                    },
                    "role": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "type": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "type",
                            "createdAt",
                            "updatedAt"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "publishedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "username",
                    "email",
                    "provider",
                    "confirmed",
                    "blocked",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "users-permissions/get/users_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Select specific fields to return in the response",
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          },
          {
            "name": "populate",
            "in": "query",
            "required": false,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "description": "Specify which relations to populate in the response",
              "anyOf": [
                {
                  "type": "string",
                  "const": "*"
                },
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {}
                }
              ]
            },
            "x-strapi-serialize": "querystring"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "documentId": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "confirmed": {
                      "type": "boolean"
                    },
                    "blocked": {
                      "type": "boolean"
                    },
                    "role": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "type": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "type",
                            "createdAt",
                            "updatedAt"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "publishedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "username",
                    "email",
                    "provider",
                    "confirmed",
                    "blocked",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      },
      "put": {
        "operationId": "users-permissions/put/users_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "documentId": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "confirmed": {
                      "type": "boolean"
                    },
                    "blocked": {
                      "type": "boolean"
                    },
                    "role": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "type": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "type",
                            "createdAt",
                            "updatedAt"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "publishedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "username",
                    "email",
                    "provider",
                    "confirmed",
                    "blocked",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  },
                  "password": {
                    "type": "string"
                  },
                  "role": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "users-permissions/delete/users_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "documentId": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "confirmed": {
                      "type": "boolean"
                    },
                    "blocked": {
                      "type": "boolean"
                    },
                    "role": {
                      "anyOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "type": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "type",
                            "createdAt",
                            "updatedAt"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "publishedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "documentId",
                    "username",
                    "email",
                    "provider",
                    "confirmed",
                    "blocked",
                    "createdAt",
                    "updatedAt",
                    "publishedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/roles/{id}": {
      "get": {
        "operationId": "users-permissions/get/roles_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "role": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "documentId": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "type": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "publishedAt": {
                          "type": "string"
                        },
                        "nb_users": {
                          "type": "number"
                        },
                        "permissions": {
                          "type": "object",
                          "propertyNames": {
                            "type": "string"
                          },
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "controllers": {
                                "type": "object",
                                "propertyNames": {
                                  "type": "string"
                                },
                                "additionalProperties": {
                                  "type": "object",
                                  "propertyNames": {
                                    "type": "string"
                                  },
                                  "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean"
                                      },
                                      "policy": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "enabled",
                                      "policy"
                                    ],
                                    "additionalProperties": false
                                  }
                                }
                              }
                            },
                            "required": [
                              "controllers"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "users": {
                          "type": "array",
                          "items": {}
                        }
                      },
                      "required": [
                        "id",
                        "documentId",
                        "name",
                        "description",
                        "type",
                        "createdAt",
                        "updatedAt",
                        "publishedAt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "role"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/roles": {
      "get": {
        "operationId": "users-permissions/get/roles",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "documentId": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "type": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "publishedAt": {
                            "type": "string"
                          },
                          "nb_users": {
                            "type": "number"
                          },
                          "permissions": {
                            "type": "object",
                            "propertyNames": {
                              "type": "string"
                            },
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "controllers": {
                                  "type": "object",
                                  "propertyNames": {
                                    "type": "string"
                                  },
                                  "additionalProperties": {
                                    "type": "object",
                                    "propertyNames": {
                                      "type": "string"
                                    },
                                    "additionalProperties": {
                                      "type": "object",
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean"
                                        },
                                        "policy": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "enabled",
                                        "policy"
                                      ],
                                      "additionalProperties": false
                                    }
                                  }
                                }
                              },
                              "required": [
                                "controllers"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "users": {
                            "type": "array",
                            "items": {}
                          }
                        },
                        "required": [
                          "id",
                          "documentId",
                          "name",
                          "description",
                          "type",
                          "createdAt",
                          "updatedAt",
                          "publishedAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "roles"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      },
      "post": {
        "operationId": "users-permissions/post/roles",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ok"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "permissions": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string"
                    },
                    "additionalProperties": {}
                  }
                },
                "required": [
                  "name",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/roles/{role}": {
      "put": {
        "operationId": "users-permissions/put/roles_by_role",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ok"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$schema": "https://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "permissions": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string"
                    },
                    "additionalProperties": {}
                  }
                },
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "users-permissions/delete/roles_by_role",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ok"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    },
    "/permissions": {
      "get": {
        "operationId": "users-permissions/get/permissions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "https://json-schema.org/draft/2020-12/schema",
                  "type": "object",
                  "properties": {
                    "permissions": {
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "controllers": {
                            "type": "object",
                            "propertyNames": {
                              "type": "string"
                            },
                            "additionalProperties": {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean"
                                  },
                                  "policy": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "enabled",
                                  "policy"
                                ],
                                "additionalProperties": false
                              }
                            }
                          }
                        },
                        "required": [
                          "controllers"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "permissions"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "users-permissions"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "PluginUploadFileDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "description": "A string field",
            "type": "string"
          },
          "alternativeText": {
            "description": "A string field",
            "type": "string"
          },
          "caption": {
            "description": "A string field",
            "type": "string"
          },
          "width": {
            "description": "An integer field",
            "type": "integer",
            "minimum": -9007199254740991,
            "maximum": 9007199254740991
          },
          "height": {
            "description": "An integer field",
            "type": "integer",
            "minimum": -9007199254740991,
            "maximum": 9007199254740991
          },
          "formats": {
            "description": "A JSON field"
          },
          "hash": {
            "description": "A string field",
            "type": "string"
          },
          "ext": {
            "description": "A string field",
            "type": "string"
          },
          "mime": {
            "description": "A string field",
            "type": "string"
          },
          "size": {
            "description": "A decimal field",
            "type": "number"
          },
          "url": {
            "description": "A string field",
            "type": "string"
          },
          "previewUrl": {
            "description": "A string field",
            "type": "string"
          },
          "provider": {
            "description": "A string field",
            "type": "string"
          },
          "provider_metadata": {
            "description": "A JSON field"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-10-30T04:03:24.277Z",
            "type": "string"
          },
          "related": {}
        },
        "required": [
          "documentId",
          "id",
          "name",
          "hash",
          "mime",
          "size",
          "url",
          "provider",
          "publishedAt",
          "related"
        ],
        "additionalProperties": false,
        "id": "PluginUploadFileDocument"
      },
      "ApiCategoryCategoryDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "description": "A string field",
            "type": "string"
          },
          "slug": {
            "description": "A UID field",
            "type": "string"
          },
          "description": {
            "description": "A text field",
            "type": "string"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-10-30T04:03:24.284Z",
            "type": "string"
          },
          "articles": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiArticleArticleDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiCategoryCategoryDocument"
      },
      "ApiArticleArticleDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "title": {
            "description": "A string field",
            "type": "string"
          },
          "description": {
            "description": "A text field",
            "type": "string"
          },
          "slug": {
            "description": "A UID field",
            "type": "string"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-10-30T04:03:24.282Z",
            "type": "string"
          },
          "cover": {
            "description": "A media field",
            "$ref": "#/components/schemas/PluginUploadFileDocument"
          },
          "author": {
            "description": "A relational field",
            "$ref": "#/components/schemas/ApiAuthorAuthorDocument"
          },
          "category": {
            "description": "A relational field",
            "$ref": "#/components/schemas/ApiCategoryCategoryDocument"
          },
          "blocks": {
            "description": "A dynamic zone field",
            "type": "array",
            "items": {}
          }
        },
        "required": [
          "documentId",
          "id",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiArticleArticleDocument"
      },
      "ApiAuthorAuthorDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "description": "A string field",
            "type": "string"
          },
          "email": {
            "description": "A string field",
            "type": "string"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-10-30T04:03:24.279Z",
            "type": "string"
          },
          "avatar": {
            "description": "A media field",
            "$ref": "#/components/schemas/PluginUploadFileDocument"
          },
          "articles": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiArticleArticleDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiAuthorAuthorDocument"
      },
      "ApiColourColourDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "Colour": {
            "description": "A string field",
            "type": "string"
          },
          "Hexcode": {
            "description": "A string field",
            "type": "string"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-10-30T04:03:24.376Z",
            "type": "string"
          },
          "product_varients": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiProductVarientProductVarientDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiColourColourDocument"
      },
      "ApiSubProductCategorySubProductCategoryDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "title": {
            "description": "A string field",
            "type": "string"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-10-30T04:03:24.382Z",
            "type": "string"
          },
          "products": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiProductProductDocument"
            }
          },
          "product_categories": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiProductCategoryProductCategoryDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiSubProductCategorySubProductCategoryDocument"
      },
      "ApiProductCategoryProductCategoryDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "title": {
            "description": "A string field",
            "type": "string"
          },
          "desc": {
            "description": "A text field",
            "type": "string"
          },
          "slug": {
            "description": "A UID field",
            "type": "string"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-10-30T04:03:24.381Z",
            "type": "string"
          },
          "img": {
            "description": "A media field",
            "$ref": "#/components/schemas/PluginUploadFileDocument"
          },
          "sub_product_categories": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiSubProductCategorySubProductCategoryDocument"
            }
          },
          "products": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiProductProductDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiProductCategoryProductCategoryDocument"
      },
      "PluginUsersPermissionsPermissionDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "action": {
            "description": "A string field",
            "type": "string"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-10-30T04:03:24.389Z",
            "type": "string"
          },
          "role": {
            "description": "A relational field",
            "$ref": "#/components/schemas/PluginUsersPermissionsRoleDocument"
          }
        },
        "required": [
          "documentId",
          "id",
          "action",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "PluginUsersPermissionsPermissionDocument"
      },
      "PluginUsersPermissionsRoleDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "description": "A string field",
            "type": "string"
          },
          "description": {
            "description": "A string field",
            "type": "string"
          },
          "type": {
            "description": "A string field",
            "type": "string"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-10-30T04:03:24.389Z",
            "type": "string"
          },
          "permissions": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginUsersPermissionsPermissionDocument"
            }
          },
          "users": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "name",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "PluginUsersPermissionsRoleDocument"
      },
      "PluginUsersPermissionsUserDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "username": {
            "description": "A string field",
            "type": "string"
          },
          "email": {
            "description": "An email field",
            "type": "string",
            "format": "email",
            "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
          },
          "provider": {
            "description": "A string field",
            "type": "string"
          },
          "confirmed": {
            "description": "A boolean field",
            "default": false,
            "type": "boolean"
          },
          "blocked": {
            "description": "A boolean field",
            "default": false,
            "type": "boolean"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-10-30T04:03:24.387Z",
            "type": "string"
          },
          "role": {
            "description": "A relational field",
            "$ref": "#/components/schemas/PluginUsersPermissionsRoleDocument"
          },
          "wishlists": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiWishlistWishlistDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "username",
          "email",
          "confirmed",
          "blocked",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "PluginUsersPermissionsUserDocument"
      },
      "ApiWishlistWishlistDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-10-30T04:03:24.385Z",
            "type": "string"
          },
          "products": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiProductProductDocument"
            }
          },
          "product_varients": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiProductVarientProductVarientDocument"
            }
          },
          "users_permissions_users": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginUsersPermissionsUserDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiWishlistWishlistDocument"
      },
      "ApiProductProductDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "title": {
            "description": "A string field",
            "type": "string"
          },
          "desc": {
            "description": "A text field",
            "type": "string"
          },
          "price": {
            "description": "A decimal field",
            "type": "number"
          },
          "isNew": {
            "description": "A boolean field",
            "default": false,
            "type": "boolean"
          },
          "quantity": {
            "description": "An integer field",
            "default": 1,
            "type": "integer",
            "minimum": -9007199254740991,
            "maximum": 9007199254740991
          },
          "type": {
            "description": "An enum field",
            "type": "string",
            "enum": [
              "featured",
              "normal",
              "trending"
            ]
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-10-30T04:03:24.379Z",
            "type": "string"
          },
          "img": {
            "description": "A media field",
            "$ref": "#/components/schemas/PluginUploadFileDocument"
          },
          "img2": {
            "description": "A media field",
            "$ref": "#/components/schemas/PluginUploadFileDocument"
          },
          "product_categories": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiProductCategoryProductCategoryDocument"
            }
          },
          "sub_product_categories": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiSubProductCategorySubProductCategoryDocument"
            }
          },
          "product_varients": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiProductVarientProductVarientDocument"
            }
          },
          "wishlists": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiWishlistWishlistDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "isNew",
          "quantity",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiProductProductDocument"
      },
      "ApiProductVarientProductVarientDocument": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "documentId": {
            "description": "The document ID, represented by a UUID",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$"
          },
          "id": {
            "type": "number"
          },
          "createdAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "updatedAt": {
            "description": "A datetime field",
            "type": "string"
          },
          "publishedAt": {
            "description": "A datetime field",
            "default": "2025-10-30T04:03:24.375Z",
            "type": "string"
          },
          "colours": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiColourColourDocument"
            }
          },
          "VariantImage": {
            "description": "A media field",
            "$ref": "#/components/schemas/PluginUploadFileDocument"
          },
          "product": {
            "description": "A relational field",
            "$ref": "#/components/schemas/ApiProductProductDocument"
          },
          "wishlists": {
            "description": "A relational field",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiWishlistWishlistDocument"
            }
          }
        },
        "required": [
          "documentId",
          "id",
          "publishedAt"
        ],
        "additionalProperties": false,
        "id": "ApiProductVarientProductVarientDocument"
      },
      "SharedSeoEntry": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
          "metaTitle": {
            "description": "A string field",
            "type": "string"
          },
          "metaDescription": {
            "description": "A text field",
            "type": "string"
          },
          "shareImage": {
            "description": "A media field",
            "$ref": "#/components/schemas/PluginUploadFileDocument"
          }
        },
        "required": [
          "metaTitle",
          "metaDescription"
        ],
        "additionalProperties": false,
        "id": "SharedSeoEntry"
      }
    }
  }
}